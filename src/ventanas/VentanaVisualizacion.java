package ventanas;

import clases.Declaraciones;
import clases.Temporizador;
import java.awt.Color;
import java.awt.Image;
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class VentanaVisualizacion extends javax.swing.JFrame implements Runnable {

    ImageIcon imgAbierto = new ImageIcon("src\\Imagenes\\abierto.PNG");
    ImageIcon imgCerrado = new ImageIcon("src\\Imagenes\\cerrado.PNG");
    ImageIcon imgCompleto = new ImageIcon("src\\Imagenes\\Completo.PNG");
    private static boolean cerrar;

    /**
     * Creates new form VentanaVisualizacion
     */
    public VentanaVisualizacion(int n) {

    }

    public VentanaVisualizacion() {
        initComponents();
        ImageIcon icono = new ImageIcon("src\\Imagenes\\icono.jpg");
        this.setIconImage(icono.getImage());
        iniciarHilo();
        getContentPane().setBackground(java.awt.Color.GRAY);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        btnCerrar.setBackground(Color.red);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numPlazasOcupadasV2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numPlazasLibresV2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTiempo = new javax.swing.JTextField();
        labelInfo = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numPlazasOcupadasV2.setEditable(false);
        numPlazasOcupadasV2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        numPlazasOcupadasV2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPlazasOcupadasV2ActionPerformed(evt);
            }
        });
        getContentPane().add(numPlazasOcupadasV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 103, 32));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nº DE PLAZAS OCUPADAS:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nº DE PLAZAS LIBRES:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 310, 40));

        numPlazasLibresV2.setEditable(false);
        numPlazasLibresV2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        getContentPane().add(numPlazasLibresV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 102, 32));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("TIEMPO RESTANTE:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, -1, -1));

        txtTiempo.setEditable(false);
        txtTiempo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTiempoActionPerformed(evt);
            }
        });
        getContentPane().add(txtTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, 102, 32));
        getContentPane().add(labelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 590, 110));

        btnCerrar.setBackground(new java.awt.Color(102, 102, 102));
        btnCerrar.setText("CERRAR PARKING");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/parking.png"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numPlazasOcupadasV2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPlazasOcupadasV2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numPlazasOcupadasV2ActionPerformed

    private void txtTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTiempoActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        labelInfo.setIcon(imgCerrado);
        Temporizador.setTiempo(0);

        cerrar = true;
    }//GEN-LAST:event_btnCerrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JTextField numPlazasLibresV2;
    private javax.swing.JTextField numPlazasOcupadasV2;
    private javax.swing.JTextField txtTiempo;
    // End of variables declaration//GEN-END:variables

    public JTextField getNumPlazasLibresV2() {
        return numPlazasLibresV2;
    }

    public JTextField getNumPlazasOcupadasV2() {
        return numPlazasOcupadasV2;
    }

    private void pintarDatos() {

        numPlazasLibresV2.setText("" + (Declaraciones.getNumPlazas() - Declaraciones.getPlazasOcupadas()));
        numPlazasOcupadasV2.setText("" + Declaraciones.getPlazasOcupadas());

    }

    private void iniciarHilo() {
        new Thread(this).start();
    }

    @Override
    public void run() {

        while (Declaraciones.getPlazasOcupadas() > 0 || !Declaraciones.isFinTiempo()) {
            pintaTiempo();
            pintarDatos();
            if ((Declaraciones.getNumPlazas() - Declaraciones.getPlazasOcupadas()) > 0 && !Declaraciones.isFinTiempo()) {
                labelInfo.setIcon(imgAbierto);
            } else if (!Declaraciones.isFinTiempo()) {
                labelInfo.setIcon(imgCompleto);
            } else {
                labelInfo.setIcon(imgCerrado);
            }
            try {
                sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(VentanaVisualizacion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        try {
            sleep(3000);
        } catch (InterruptedException ex) {
            Logger.getLogger(VentanaVisualizacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        new VentanaFinal().setVisible(true);
    }

    public void asignarImagen(JLabel label, ImageIcon icono) {
        int alto = labelInfo.getHeight();
        int ancho = labelInfo.getWidth();
        icono.setImage(icono.getImage().getScaledInstance(alto, ancho, Image.SCALE_DEFAULT));
        label.setIcon(icono);
    }

    public JTextField getTxtTiempo() {
        return txtTiempo;
    }

    private void pintaTiempo() {
        // Pintamos el tiempo mientras este sea mayor que 0, ya que en caso de
        // cerrar el parking con el boton, se puede producir un conteo negativo
        if (Temporizador.getTiempo() > 0) {
            txtTiempo.setText("" + Temporizador.getTiempo());
        } else {
            txtTiempo.setText("0");

        }
    }

    public static boolean isCerrar() {
        return cerrar;
    }

}
